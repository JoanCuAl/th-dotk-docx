<?xml version="1.0" encoding="UTF-8"?><project xmlns:dita="http://dita-ot.sourceforge.net">

  <taskdef resource="net/sf/antcontrib/antlib.xml"/>

  <target name="docx.init">
    <property name="force-unique" value="true"/>
    <property name="docx.dir" location="${dita.plugin.com.elovirta.ooxml.dir}/docx"/>
    <!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/validation-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/clause-library-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-01032019_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-04012018_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-04052021_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-05012020_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-07102018_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-10162018_rev-202201_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_source-11192017_rev-202201_template.dotx"/>-->
	
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/fx_annex_a_v3_amended-03162020_rev-202201_template.dotx"/>-->
	
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2020defs-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/securities_2022-sft-defs-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/securities_2022-sft-prov-template.dotx"/>-->
	
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021defs-template.dotx"/>-->

	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021foa-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021conf_template-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021defs-anc-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021_bd_matrix-template.dotx"/>-->
  
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021_ca_matrix-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021_fro_matrix-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021_mtm_matrix-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021_sm_matrix-template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/standard_fx_vol_varr_corr_swap_supp_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/standard_fx_non_deliv_x_ccy_supp_template.dotx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2002MasterAgreement.docx"/>-->
	<!--<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/standard_inflation_2008.dotx"/>-->
	
	
	<property name="dotx.file" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/${docx.publication}_template.dotx"/>
	
	
    <property name="args.rellinks" value="nofamily"/>
	
	<!-- Tradeheader Update Cover -->
	<!-- Desc: By default, no docx.cover parameter should be set in this version. If a default*cover is created, add this path here. -->
	<!-- <property name="docx.cover" location="${dita.plugin.com.elovirta.ooxml.dir}/resources/2021-ir-defs-cover.xml/> -->
	<!-- End of Tradeheader Update Cover -->
	
	<!-- Tradeheader Update No Bold Footnotes -->
	<!-- Desc: Set default value of bold text generation in footnotes. -->
	<property name="docx.bold.footnotes" value="true"/>
	<!-- End of Tradeheader Update No Bold Footnotes -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table of contents generation. -->
	<property name="docx.toc" value="true"/>
	<!-- End of Tradeheader Update -->

	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of which content is used for generating the TOC-->
  <property name="docx.toc.mode" value="heading"/>
  <!-- End of Tradeheader Update -->

	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of index of terms generation. -->
	<property name="docx.indexOfTerms" value="true"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table spacing before. -->
	<property name="docx.tableSpacing.before" value="0"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table spacing after. -->
	<property name="docx.tableSpacing.after" value="0"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table identation value. -->
	<property name="docx.tableIdent.value" value="0"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table identation type. -->
	<property name="docx.tableIdent.type" value="dxa"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table width value. -->
	<property name="docx.tableWidth.value" value="0"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table width type. -->
	<property name="docx.tableWidth.type" value="dxa"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value of table col width source. -->
	<property name="docx.tableColWidth.source" value="auto"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value to table tbody if it can be split. -->
	<property name="docx.tableTbody.cantSplit" value="true"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value to table thead if it can be split. -->
	<property name="docx.tableThead.cantSplit" value="true"/>
	<!-- End of Tradeheader Update -->
	
	<!-- Tradeheader Update -->
	<!-- Desc: Set default value to table thead vertical aligment. -->
	<property name="docx.tableTheadVerticalAligment" value="top"/>
	<!-- End of Tradeheader Update -->
	
    <property name="preprocess.copy-image.skip" value="true"/>
    <property name="preprocess.copy-html.skip" value="true"/>
    <property environment="env"/>
    <condition property="inkscape.exec" value="/Applications/Inkscape.app/Contents/Resources/bin/inkscape">
      <available file="/Applications/Inkscape.app/Contents/Resources/bin/inkscape"/>
    </condition>
    <condition property="inkscape.exec" value="${env.ProgramFiles(x86)}\Inkscape\Inkscape.exe">
      <available file="${env.ProgramFiles(x86)}\Inkscape\Inkscape.exe"/>
    </condition>
    <condition property="inkscape.exec" value="${env.PROGRAMFILES}\Inkscape\Inkscape.exe">
      <available file="${env.PROGRAMFILES}\Inkscape\Inkscape.exe"/>
    </condition>
  </target>

  <target name="dita2docx" depends="docx.init,              build-init,              preprocess,              docx.image-metadata,              docx.svg2emf,              docx.template,              docx.merge,              docx.convert,              docx.package"/>

  <target name="docx.image-metadata" description="Read image metadata">
    <pipeline message="Read image metadata." taskname="image-metadata" tempdir="${dita.temp.dir}">
      <module class="org.dita.dost.module.ImageMetadataModule">
        <param name="outputdir" location="${output.dir}"/>
      </module>
    </pipeline>
  </target>

  <target name="docx.svg2emf" if="inkscape.exec" unless="docx.inkscape.skip">
    <mkdir dir="${dita.temp.dir}/docx/word/media"/>
    <for param="svg.file">
      <path>
        <fileset dir="${user.input.dir}">
          <include name="**/*.svg"/>
        </fileset>
      </path>
      <sequential>
        <local name="svg.name"/>
        <local name="emf.file"/>
        <basename property="svg.name" file="@{svg.file}" suffix=".svg"/>
        <property name="emf.file" location="${dita.temp.dir}/docx/word/media/${svg.name}.emf"/>
        <echo taskname="inkscape">Converting @{svg.file} to ${emf.file}</echo>
        <exec executable="${inkscape.exec}" taskname="inkscape">
          <arg value="-z"/>
          <arg value="--export-emf=${emf.file}"/>
          <arg file="@{svg.file}"/>
        </exec>
      </sequential>
    </for>
  </target>

  <target name="docx.template">
    <unzip src="${dotx.file}" dest="${dita.temp.dir}/dotx">
      <patternset>
        <exclude name="**/.DS_Store"/>
        <exclude name="__MACOSX/**"/>
      </patternset>
    </unzip>
    <copy todir="${dita.temp.dir}/docx" overwrite="true">
      <fileset dir="${dita.temp.dir}/dotx"/>
    </copy>
  </target>

  <target name="docx.merge">
    <dirname property="dita.temp.dir.fullpath" file="${dita.temp.dir}/dummy.file"/>
    <property name="topicmerge.xsl" location="${dita.plugin.org.dita.pdf2.dir}/xsl/common/topicmerge.xsl"/>
    <pipeline message="topicmerge" inputmap="${dita.temp.dir.fullpath}/${user.input.file}" tempdir="${dita.temp.dir.fullpath}">
      <module class="org.dita.dost.module.TopicMergeModule">
        <param name="output" location="${dita.temp.dir.fullpath}/${dita.map.filename.root}_MERGED.xml"/>
        <param name="style" location="${topicmerge.xsl}"/>
      </module>
    </pipeline>
  </target>

  <target name="docx.convert">
    <property name="image.dir" location="${user.input.dir}/.."/>
    <property name="clean.input.file" location="${dita.temp.dir.fullpath}/${dita.map.filename.root}_CLEANED.xml"/>
    <property name="document.flat.xsl" location="${docx.dir}/word/document.flat.xsl"/>
    <xslt style="${document.flat.xsl}" in="${dita.temp.dir.fullpath}/${dita.map.filename.root}_MERGED.xml" out="${clean.input.file}" force="true">
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>

    <makeurl property="dotx.dir.uri" file="${dita.temp.dir}/dotx"/>
    <makeurl property="user.input.dir.url" file="${user.input.dir}"/>

    <property name="core.xsl" location="${docx.dir}/docProps/core.xsl"/>
    <xslt style="${core.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/docProps/core.xml" force="true">
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <property name="custom.xsl" location="${docx.dir}/docProps/custom.xsl"/>
    <xslt style="${custom.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/docProps/custom.xml" force="true">
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>

    <property name="document.xsl" location="${docx.dir}/word/document.xsl"/>
    <xslt style="${document.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/word/document.xml" force="true">
      <param name="image.dir" expression="${image.dir}"/>
      <param name="template.dir" expression="${dotx.dir.uri}"/>
      <param name="input.dir.url" expression="${user.input.dir.url}"/>
      <!-- Tradeheader Update Cover -->
	  <!-- Desc: Adds the $docx.cover.file parameter when processing this step. -->
	  <!--<param name="docx.cover.file" expression="${docx.cover}"/>-->
	  <!-- End of Tradeheader Update Cover -->
	  
	  <!-- Tradeheader Update No Bold Footnotes -->
	  <!-- Desc: Adds the $docx.bold.footnotes parameter when processing this step. -->
	  <param name="docx.bold.footnotes" expression="${docx.bold.footnotes}"/>
	  <!-- End of Tradeheader Update No Bold Footnotes -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.toc parameter when processing this step. -->
	  <param name="docx.toc" expression="${docx.toc}"/>
	  <!-- End of Tradeheader Update -->

    <!-- TODO: arreglar comments-->
    <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.toc parameter when processing this step. -->
	  <param name="docx.toc.mode" expression="${docx.toc.mode}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.indexOfTerms parameter when processing this step. -->
	  <param name="docx.indexOfTerms" expression="${docx.indexOfTerms}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableSpacing.before parameter when processing this step. -->
	  <param name="docx.tableSpacing.before" expression="${docx.tableSpacing.before}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableSpacing.after parameter when processing this step. -->
	  <param name="docx.tableSpacing.after" expression="${docx.tableSpacing.after}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableIdent.value parameter when processing this step. -->
	  <param name="docx.tableIdent.value" expression="${docx.tableIdent.value}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableIdent.type parameter when processing this step. -->
	  <param name="docx.tableIdent.type" expression="${docx.tableIdent.type}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableWidth.value parameter when processing this step. -->
	  <param name="docx.tableWidth.value" expression="${docx.tableWidth.value}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableWidth.type parameter when processing this step. -->
	  <param name="docx.tableWidth.type" expression="${docx.tableWidth.type}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableColWidth.source parameter when processing this step. -->
	  <param name="docx.tableColWidth.source" expression="${docx.tableColWidth.source}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableTbody.cantSplit parameter when processing this step. -->
	  <param name="docx.tableTbody.cantSplit" expression="${docx.tableTbody.cantSplit}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableThead.cantSplit parameter when processing this step. -->
	  <param name="docx.tableThead.cantSplit" expression="${docx.tableThead.cantSplit}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.tableTheadVerticalAligment parameter when processing this step. -->
	  <param name="docx.tableTheadVerticalAligment" expression="${docx.tableTheadVerticalAligment}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.configFile parameter when processing this step. -->
	  <!--<param name="docx.configFile" expression="${docx.configFile}"/>-->
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.publication parameter when processing this step. -->
	  <param name="docx.publication" expression="${docx.publication}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Desc: Adds the $generate_links parameter when processing this step. -->
	  <param name="generate_links" expression="${generate_links}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $dita.dir parameter when processing this step. -->
	  <param name="dita.dir" expression="${dita.dir}"/>
	  <!-- End of Tradeheader Update -->
	  
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <property name="comments.xsl" location="${docx.dir}/word/comments.xsl"/>
    <xslt style="${comments.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/word/comments.xml" force="true">
      <param name="template.dir" expression="${dotx.dir.uri}"/>
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <property name="numbering.xsl" location="${docx.dir}/word/numbering.xsl"/>
    <xslt style="${numbering.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/word/numbering.xml" force="true">
      <param name="template.dir" expression="${dotx.dir.uri}"/>
      <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.publication parameter when processing this step. -->
	  <param name="docx.publication" expression="${docx.publication}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $dita.dir parameter when processing this step. -->
	  <param name="dita.dir" expression="${dita.dir}"/>
	  <!-- End of Tradeheader Update -->
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <property name="footnotes.xsl" location="${docx.dir}/word/footnotes.xsl"/>
    <xslt style="${footnotes.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/word/footnotes.xml" force="true">
      <param name="template.dir" expression="${dotx.dir.uri}"/>
      <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $docx.publication parameter when processing this step. -->
	  <param name="docx.publication" expression="${docx.publication}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Desc: Adds the $generate_links parameter when processing this step. -->
	  <param name="generate_links" expression="${generate_links}"/>
	  <!-- End of Tradeheader Update -->
	  
	  <!-- Tradeheader Update -->
	  <!-- Desc: Adds the $dita.dir parameter when processing this step. -->
	  <param name="dita.dir" expression="${dita.dir}"/>
	  <!-- End of Tradeheader Update -->
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <property name="document.xml.xsl" location="${docx.dir}/word/_rels/document.xml.xsl"/>
    <xslt style="${document.xml.xsl}" in="${clean.input.file}" out="${dita.temp.dir}/docx/word/_rels/document.xml.rels" force="true">
      <param name="template.dir" expression="${dotx.dir.uri}"/>
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
    <makeurl property="clean.input.file.uri" file="${clean.input.file}"/>
    <xslt style="${docx.dir}/[Content_Types].xsl" in="${dita.temp.dir}/dotx/[Content_Types].xml" out="${dita.temp.dir}/docx/[Content_Types].xml" force="true">
      <param name="input.uri" expression="${clean.input.file.uri}"/>
      
      <xmlcatalog refid="dita.catalog"/>
    </xslt>
  </target>

  <target name="docx.package" depends="docx.package.media">
    <condition property="outputFile.extension" value="docm" else="docx">
      <matches string="${dotx.file}" pattern="\.dotm$"/>
    </condition>
    <property name="outputFile" location="${dita.map.output.dir}/${dita.map.filename.root}.${outputFile.extension}"/>
    <delete file="${outputFile}"/>
    <zip zipfile="${outputFile}">
      <fileset dir="${dita.temp.dir}/docx"/>
    </zip>
  </target>

	<!-- Tradeheader Update -->
	<!-- Target: add input media files to the generation process -->
  <target name="docx.package.media" unless="media.skip">
    <copy todir="${dita.temp.dir}/docx/word/media">
      <fileset dir="${dita.plugin.com.elovirta.ooxml.dir}/resources/images" includesfile="${dita.temp.dir}/${imagefile}">
        <exclude name="**/*.mml"/>
        <exclude name="**/*.svg"/>
      </fileset>
    </copy>
    <copy todir="${dita.temp.dir}/docx/word/media">
      <dita-fileset format="image"/>
    </copy>
    <delete>
      <fileset dir="${dita.temp.dir}/docx/word/media" erroronmissingdir="false">
        <include name="**/*.mml"/>
        <include name="**/*.svg"/>
      </fileset>
    </delete>
  </target>
  <!-- End of Tradeheader Update -->

</project>